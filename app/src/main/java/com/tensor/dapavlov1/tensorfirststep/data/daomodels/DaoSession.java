package com.tensor.dapavlov1.tensorfirststep.data.daomodels;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DbCity;
import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DbWeather;

import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DbCityDao;
import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DbWeatherDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dbCityDaoConfig;
    private final DaoConfig dbWeatherDaoConfig;

    private final DbCityDao dbCityDao;
    private final DbWeatherDao dbWeatherDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dbCityDaoConfig = daoConfigMap.get(DbCityDao.class).clone();
        dbCityDaoConfig.initIdentityScope(type);

        dbWeatherDaoConfig = daoConfigMap.get(DbWeatherDao.class).clone();
        dbWeatherDaoConfig.initIdentityScope(type);

        dbCityDao = new DbCityDao(dbCityDaoConfig, this);
        dbWeatherDao = new DbWeatherDao(dbWeatherDaoConfig, this);

        registerDao(DbCity.class, dbCityDao);
        registerDao(DbWeather.class, dbWeatherDao);
    }
    
    public void clear() {
        dbCityDaoConfig.clearIdentityScope();
        dbWeatherDaoConfig.clearIdentityScope();
    }

    public DbCityDao getDbCityDao() {
        return dbCityDao;
    }

    public DbWeatherDao getDbWeatherDao() {
        return dbWeatherDao;
    }

}
