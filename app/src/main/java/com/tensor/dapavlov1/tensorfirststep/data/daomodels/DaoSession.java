package com.tensor.dapavlov1.tensorfirststep.data.daomodels;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DaoCity;
import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DaoWeather;

import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DaoCityDao;
import com.tensor.dapavlov1.tensorfirststep.data.daomodels.DaoWeatherDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig daoCityDaoConfig;
    private final DaoConfig daoWeatherDaoConfig;

    private final DaoCityDao daoCityDao;
    private final DaoWeatherDao daoWeatherDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        daoCityDaoConfig = daoConfigMap.get(DaoCityDao.class).clone();
        daoCityDaoConfig.initIdentityScope(type);

        daoWeatherDaoConfig = daoConfigMap.get(DaoWeatherDao.class).clone();
        daoWeatherDaoConfig.initIdentityScope(type);

        daoCityDao = new DaoCityDao(daoCityDaoConfig, this);
        daoWeatherDao = new DaoWeatherDao(daoWeatherDaoConfig, this);

        registerDao(DaoCity.class, daoCityDao);
        registerDao(DaoWeather.class, daoWeatherDao);
    }
    
    public void clear() {
        daoCityDaoConfig.clearIdentityScope();
        daoWeatherDaoConfig.clearIdentityScope();
    }

    public DaoCityDao getDaoCityDao() {
        return daoCityDao;
    }

    public DaoWeatherDao getDaoWeatherDao() {
        return daoWeatherDao;
    }

}
